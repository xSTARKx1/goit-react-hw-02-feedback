{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","App.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/Feedbackoptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","upFirstLetter","toLocaleUpperCase","slice","className","styles","leaveFeedbackBtn","key","onClick","Section","title","children","Notification","App","state","leaveFeedback","value","setState","prevState","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","totalFeedbacks","Math","round","this","PositiveFeedbackPercentage","buttonsContainer","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,iBAAmB,4C,gBCArCD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,iBAAmB,gC,sKCqBtBC,G,MAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,S,gBCcWC,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GACvB,IAAMC,EAAgBD,EAAO,GAAGE,oBAAsBF,EAAOG,MAAM,GAEnE,OACE,4BACEC,UAAWC,IAAOC,iBAClBC,IAAKP,EACLQ,QAAS,kBAAMZ,EAAgBI,KAE9BC,O,gBCEMQ,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,wBAAIP,UAAWC,IAAOK,OAAQA,GAC7BC,ICHUC,EAFM,kBAAM,kD,gBCkEZC,E,4MA5DbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAQE,EAAUF,GAAS,O,EAKlCG,mBAAqB,WAGnB,OAFsBtB,OAAOuB,OAAO,EAAKN,OAEpBO,QAAO,SAACC,EAAKN,GAAN,OAAgBM,EAAMN,M,EAGpDO,gCAAkC,WAChC,IACMC,EADmB3B,OAAOuB,OAAO,EAAKN,OACJO,QAAO,SAACC,EAAKN,GAAN,OAAgBM,EAAMN,KAErE,OAAOS,KAAKC,MAAyB,IAAlB,EAAKZ,MAAMzB,KAAcmC,I,uDAI5C,IAAMA,EAAiBG,KAAKR,qBACtBS,EAA6BD,KAAKJ,kCAFjC,EAGwBI,KAAKb,MAA5BxB,EAHD,EAGCA,QAASD,EAHV,EAGUA,KAAME,EAHhB,EAGgBA,IAEvB,OACE,oCACE,kBAAC,EAAD,CAASmB,MAAM,yBACb,yBAAKN,UAAWC,IAAOwB,kBACrB,kBAAC,EAAD,CACElC,QAASgC,KAAKb,MACdlB,gBAAiB+B,KAAKZ,kBAI5B,kBAAC,EAAD,CAASL,MAAO,cACZc,EAGA,kBAAC,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,EACP/B,mBAAoBmC,IAPtB,kBAAC,EAAD,Y,GA7CME,a,MCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.42608d2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaveFeedbackBtn\":\"FeedbackOptions_leaveFeedbackBtn__xTt5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1MUQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"App_buttonsContainer__1A_7A\"};","import React from 'react';\nimport Proptypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {positivePercentage}% </p>\n  </>\n);\n\nStatistics.propTypes = {\n  good: Proptypes.number.isRequired,\n  neutral: Proptypes.number.isRequired,\n  bad: Proptypes.number.isRequired,\n  total: Proptypes.number.isRequired,\n  positivePercentage: Proptypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  Object.keys(options).map(option => {\n    const upFirstLetter = option[0].toLocaleUpperCase() + option.slice(1);\n\n    return (\n      <button\n        className={styles.leaveFeedbackBtn}\n        key={option}\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {upFirstLetter}\n      </button>\n    );\n  });\n\nFeedbackOptions.propTypes = {\n  options: Proptypes.objectOf(Proptypes.number.isRequired).isRequired,\n  onLeaveFeedback: Proptypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </>\n);\n\nSection.propTypes = {\n  title: Proptypes.string.isRequired,\n  children: Proptypes.element.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\n\nconst Notification = () => <h3>No feedback given</h3>;\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = value => {\n    this.setState(prevState => {\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const totalFeedback = Object.values(this.state);\n\n    return totalFeedback.reduce((acc, value) => acc + value);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const arrayOfFeedbacks = Object.values(this.state);\n    const totalFeedbacks = arrayOfFeedbacks.reduce((acc, value) => acc + value);\n\n    return Math.round((this.state.good * 100) / totalFeedbacks);\n  };\n\n  render() {\n    const totalFeedbacks = this.countTotalFeedback();\n    const PositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    const { neutral, good, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <div className={styles.buttonsContainer}>\n            <FeedbackOptions\n              options={this.state}\n              onLeaveFeedback={this.leaveFeedback}\n            />\n          </div>\n        </Section>\n        <Section title={'Statistics'}>\n          {!totalFeedbacks ? (\n            <Notification />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedbacks}\n              positivePercentage={PositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}