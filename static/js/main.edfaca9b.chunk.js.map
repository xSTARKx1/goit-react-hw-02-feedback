{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","App.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/Feedbackoptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","upFirstLetter","toLocaleUpperCase","slice","className","styles","leaveFeedbackBtn","key","onClick","Section","title","children","Notification","App","state","LeaveFeedback","value","setState","prevState","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","totalFeedbacks","Math","round","this","buttonsContainer","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,iBAAmB,4C,gBCArCD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,iBAAmB,gC,sKCqBtBC,G,MAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,S,gBCgBWC,EAtBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GACvB,IAAMC,EAAgBD,EAAO,GAAGE,oBAAsBF,EAAOG,MAAM,GAEnE,OACE,4BACEC,UAAWC,IAAOC,iBAClBC,IAAKP,EACLQ,QAAS,kBAAMZ,EAAgBI,KAE9BC,O,gBCEMQ,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,wBAAIP,UAAWC,IAAOK,OAAQA,GAC7BC,ICHUC,EAFM,kBAAM,kD,gBCgEZC,E,4MA1DbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAQE,EAAUF,GAAS,O,EAKlCG,mBAAqB,WAGnB,OAFsBtB,OAAOuB,OAAO,EAAKN,OAEpBO,QAAO,SAACC,EAAKN,GAAN,OAAgBM,EAAMN,M,EAGpDO,gCAAkC,WAChC,IACMC,EADmB3B,OAAOuB,OAAO,EAAKN,OACJO,QAAO,SAACC,EAAKN,GAAN,OAAgBM,EAAMN,KAErE,OAAOS,KAAKC,MAAyB,IAAlB,EAAKZ,MAAMzB,KAAcmC,I,uDAI5C,IAAMA,EAAiBG,KAAKR,qBAE5B,OACE,oCACE,kBAAC,EAAD,CAAST,MAAM,yBACb,yBAAKN,UAAWC,IAAOuB,kBACrB,kBAAC,EAAD,CACEjC,QAASgC,KAAKb,MACdlB,gBAAiB+B,KAAKZ,kBAI5B,kBAAC,EAAD,CAASL,MAAO,cACZc,EAGA,kBAAC,EAAD,CACEnC,KAAMsC,KAAKb,MAAMzB,KACjBC,QAASqC,KAAKb,MAAMxB,QACpBC,IAAKoC,KAAKb,MAAMvB,IAChBC,MAAOmC,KAAKR,qBACZ1B,mBAAoBkC,KAAKJ,oCAP3B,kBAAC,EAAD,Y,GA3CMM,a,MCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.edfaca9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaveFeedbackBtn\":\"FeedbackOptions_leaveFeedbackBtn__xTt5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1MUQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"App_buttonsContainer__1A_7A\"};","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}% </p>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: Proptypes.number.isRequired,\r\n  neutral: Proptypes.number.isRequired,\r\n  bad: Proptypes.number.isRequired,\r\n  total: Proptypes.number.isRequired,\r\n  positivePercentage: Proptypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  Object.keys(options).map(option => {\r\n    const upFirstLetter = option[0].toLocaleUpperCase() + option.slice(1);\r\n\r\n    return (\r\n      <button\r\n        className={styles.leaveFeedbackBtn}\r\n        key={option}\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {upFirstLetter}\r\n      </button>\r\n    );\r\n  });\r\n\r\n// this.value = this.value[0].toUpperCase() + this.value.slice(1);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: Proptypes.objectOf(Proptypes.number.isRequired).isRequired,\r\n  onLeaveFeedback: Proptypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  children: Proptypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Notification = () => <h3>No feedback given</h3>;\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  LeaveFeedback = value => {\n    this.setState(prevState => {\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const totalFeedback = Object.values(this.state);\n\n    return totalFeedback.reduce((acc, value) => acc + value);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const arrayOfFeedbacks = Object.values(this.state);\n    const totalFeedbacks = arrayOfFeedbacks.reduce((acc, value) => acc + value);\n\n    return Math.round((this.state.good * 100) / totalFeedbacks);\n  };\n\n  render() {\n    const totalFeedbacks = this.countTotalFeedback();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <div className={styles.buttonsContainer}>\n            <FeedbackOptions\n              options={this.state}\n              onLeaveFeedback={this.LeaveFeedback}\n            />\n          </div>\n        </Section>\n        <Section title={'Statistics'}>\n          {!totalFeedbacks ? (\n            <Notification />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}